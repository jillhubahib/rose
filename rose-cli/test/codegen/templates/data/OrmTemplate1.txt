import * as rose from '@rosepg/rose';

export const FooTableAllColumns = {
	id: QFooTable.id,
};

export const FooTableDefaultQueries = {
	getOne: (function getOne() {
		interface Params {
			id: number;
		}

		const P = rose.params<Params>();
		return rose.select(FooTableAllColumns).where(QFooTable.id.eq(P.id)).finalise(P);
	})(),
	insertOne: function insertOne(row: FooTableInsertRow) {
		return rose.insertFromObject<TFooTable, FooTableInsertRow>(QFooTable, row).finalise({});
	},
	updateOne: function updateOne(updates: rose.PartialTableColumns<TFooTable>) {
		interface Params {
			id: number;
		}

		const P = rose.params<Params>();
		return rose.updateFromObject(QFooTable, updates).where(QFooTable.id.eq(P.id)).finalise(P);
	},
	deleteOne: (function deleteOne() {
		interface Params {
			id: number;
		}

		const P = rose.params<Params>();
		return rose.deleteFrom(QFooTable).where(QFooTable.id.eq(P.id)).finalise(P);
	})(),
};
